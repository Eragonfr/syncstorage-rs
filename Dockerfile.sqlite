# NOTE: Ensure builder's Rust version matches CI's in .circleci/config.yml # RUST_VER
FROM docker.io/lukemathwalker/cargo-chef:0.1.67-rust-1.78-bookworm as chef
WORKDIR /app

FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS cacher

COPY --from=planner /app/recipe.json recipe.json
RUN cargo chef cook --release --no-default-features --features=syncstorage-db/sqlite,tokenserver-db/sqlite --features=py_verifier --recipe-path recipe.json

FROM chef as builder

COPY . /app
COPY --from=cacher /app/target /app/target
COPY --from=cacher $CARGO_HOME /app/$CARGO_HOME

RUN \
    apt-get -q update && \
    apt-get -q install -y --no-install-recommends python3-dev python3-pip python3-setuptools python3-wheel && \
    pip3 install --break-system-packages -r /app/requirements.txt && \
    rm -rf /var/lib/apt/lists/*

ENV PATH=$PATH:/root/.cargo/bin

RUN \
    cargo --version && \
    rustc --version && \
    cargo install --path ./syncserver --no-default-features --features=syncstorage-db/sqlite,tokenserver-db/sqlite --features=py_verifier --locked --root /app

FROM docker.io/library/debian:bookworm-slim
WORKDIR /app
COPY --from=builder /app/requirements.txt /app
# Due to a build error that occurs with the Python cryptography package, we
# have to set this env var to prevent the cryptography package from building
# with Rust. See this link for more information:
# https://pythonshowcase.com/question/problem-installing-cryptography-on-raspberry-pi
ENV CRYPTOGRAPHY_DONT_BUILD_RUST=1


RUN \
    groupadd --gid 10001 app && \
    useradd --uid 10001 --gid 10001 --home /app --create-home app && \
    apt-get -q update && \
    apt-get -q install -y --no-install-recommends libssl-dev libffi-dev pkg-config python3-dev python3-pip python3-setuptools python3-wheel && \
    # The python3-cryptography debian package installs version 2.6.1, but we
    # we want to use the version specified in requirements.txt. To do this,
    # we have to remove the python3-cryptography package here.
    apt-get -q remove -y python3-cryptography && \
    pip3 install --break-system-packages -r /app/requirements.txt && \
    rm -rf /var/lib/apt/lists/*

COPY --from=builder /app/bin /app/bin
COPY --from=builder /app/syncserver/version.json /app
COPY --from=builder /app/tools/integration_tests /app/tools/integration_tests
COPY --from=builder /app/tools/tokenserver /app/tools/tokenserver
COPY --from=builder /app/scripts/start_mock_fxa_server.sh /app/scripts/start_mock_fxa_server.sh

RUN \
    sed -i '/mysqlclient/d' /app/tools/integration_tests/requirements.txt && \
    pip3 install --break-system-packages -r /app/tools/integration_tests/requirements.txt
RUN \
    sed -i '/mysqlclient/d' /app/tools/tokenserver/requirements.txt && \
    pip3 install --break-system-packages -r /app/tools/tokenserver/requirements.txt

USER app:app

ENTRYPOINT ["/app/bin/syncserver"]
